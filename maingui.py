# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from time import sleep
from PyQt5 import QtCore, QtGui, QtMultimedia, QtMultimediaWidgets, QtWidgets
from PyQt5.QtCore import QObject, QTimer, pyqtSignal, QCoreApplication, QThread, pyqtSlot
from PyQt5.QtGui import QColor
from PyQt5.QtWidgets import QMainWindow,QGraphicsDropShadowEffect,QProgressDialog,QLabel,QVBoxLayout,QMessageBox
import datetime
from urllib.parse import quote
import openai
import pyttsx3
import speech_recognition as sr
from intentRecognitionAi import mainTaskExecutor
import os
import sys
import json 

engine = pyttsx3.init()
cd = os.path.dirname(os.path.abspath(sys.argv[0]))
print(cd)
#add the list of voices availabe in the system
def updateVoices():
    ls = []
    for id,voice in enumerate(engine.getProperty('voices')):
        ls.insert(id,voice.name)
    loadOnStartup['settings'][0]['available_voices'] = ls

    #loading the settings into program
    with open(cd+"\\data\\loadOnStartup.json","w") as file:
        json.dump(loadOnStartup,file,indent=4)

#loading settings json
def loadSettigns():
    with open(cd+"\\data\\loadOnStartup.json", 'r') as file:
        loadOnStartup = json.load(file)

    return loadOnStartup


loadOnStartup = loadSettigns()

api_key = loadOnStartup['settings'][0]['api_key']
current_voice = loadOnStartup['settings'][0]['current_voice']
available_voices = loadOnStartup['settings'][0]['available_voices']
current_profile = loadOnStartup['profile'][0]['current_profile']
available_profiles = loadOnStartup['profile'][0]['available_profiles']

if api_key is not None:
    openai.api_key = api_key
else:
    openai.api_key = "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"



with open(cd+"\\darkModeStyleSheet.txt","r") as file:
    stream = file.read()

class worker(QObject):
    finished = pyqtSignal()
    progress = pyqtSignal(str)
    thread_running = True

    def __init__(self):
        super().__init__()
        self.is_running = True
        self.ai = vA()


    def run(self):

        while self.thread_running:

            while self.is_running:

                self.wakeup, self.query = self.ai.wakeUp()

                if self.wakeup:

                    self.progress.emit(f'You: {self.query}\n\nSam: Hello sir how may I help you\n\n')
                    self.ai.speak("Hello sir how may I help you")

                    while self.is_running:

                        self.query = self.ai.listen()

                        if not 'none' in self.query:

                            self.progress.emit("You: " + self.query + "\n\n")
                            valueReturned = mainTaskExecutor(self.query)

                            if valueReturned:
                                pass

                            elif "goodbye" in self.query:
                                self.progress.emit("Sam: Have a good day sir\n\n")
                                self.ai.speak("Have a good day sir")

                            else:
                                response = self.ai.understand(self.query)
                                self.ai.speak(response)
                                self.progress.emit("Sam: " + response + "\n\n")

        QCoreApplication.processEvents()

        self.finished.emit()

    def stop(self):
        self.ai.timeout_flag = True
        self.is_running = False
        print("recived stoping signla")

    def stopWorker(self):
        self.thread_running = False


class ActivateThread(QThread, QObject):
    stopWork = pyqtSignal()
    stopWorker =pyqtSignal()
    def __init__(self):
        super().__init__()
        self.stopWork.connect(self.stopworkFun)
        self.stopWorker.connect(self.stopworkerFun)
        self.worker = worker()

        self.worker.moveToThread(self)
        self.started.connect(self.worker.run)
        self.worker.finished.connect(self.quit)
        self.worker.finished.connect(self.worker.deleteLater)
        self.finished.connect(self.deleteLater)

    def stopworkFun(self):
        print("from thread")
        self.worker.stop()
    def stopworkerFun(self):
        self.worker.stopWorker()
class vA():
    query = 'none'

    def __init__(self):
        # Initialize the recognizer
        self.recognizer = sr.Recognizer()
        # Initialize the text-to-speech engine
        self.engine = pyttsx3.init("sapi5")
        self.voices = self.engine.getProperty("voices")
        for voice in self.voices:
            if voice.name == current_voice:
                self.engine.setProperty("voice",voice.id)

    def speak(self, text):
        self.engine.say(text)
        self.engine.runAndWait()


    def listen(self, time=0, ptimeLimit=8):
        with sr.Microphone() as source:
            print("Listening...")
            audio = self.recognizer.listen(source, timeout=time, phrase_time_limit=ptimeLimit)

            try:
                # Recognize audio using Google Web Speech API
                self.query = self.recognizer.recognize_google(audio)
                self.query = self.query.lower()

            except Exception as e:
                self.query = 'none'

        return self.query.lower()

    def wakeUp(self):
        self.query = self.listen()
        if 'sam' in self.query:
            return True, self.query
        else:
            return False, self.query

    def wishMe(self):
        self.hour = int(datetime.datetime.now().hour)
        if self.hour >= 0 and self.hour < 12:
            self.speak("Good Morning!")

        elif self.hour >= 12 and self.hour < 18:
            self.speak("Good Afternoon!")

        else:
            self.speak("Good Evening!")

    def understand(question, chat_log=None):
        file_path = os.path.dirname(os.path.abspath(sys.argv[0]))

        fileLog = open(file_path + "\\data\\chat_log.txt", "r")
        chat_log_template = fileLog.read()
        fileLog.close()
        if chat_log is None:
            chat_log = chat_log_template

        prompt = f"{chat_log}You: {question}\n"
        response = openai.Completion.create(
            model="text-davinci-003",
            prompt=prompt,
            temperature=0.5,
            max_tokens=60,
            top_p=0.3,
            frequency_penalty=0.5,
            presence_penalty=0
        )
        ans = response.choices[0].text.strip()
        chat_log_template_update = chat_log_template + f"\nYou: {str(question)}\nAi: {ans}"
        fileLog = open(file_path + "\\data\\chat_log.txt", "w")
        fileLog.write(chat_log_template_update)
        fileLog.close()
        return ans


class Ui_MainWindow(QMainWindow, QObject):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 810)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(800, 810))
        MainWindow.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        
        MainWindow.setAnimated(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setMinimumSize(QtCore.QSize(660, 680))
        self.centralwidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.centralwidget.setStyleSheet("")
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_6.setContentsMargins(12, 12, 12, 12)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.frame_2.sizePolicy().hasHeightForWidth())
        self.frame_2.setSizePolicy(sizePolicy)
        self.frame_2.setMinimumSize(QtCore.QSize(100, 760))
        self.frame_2.setStyleSheet("")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.groupBox = QtWidgets.QGroupBox(self.frame_2)
        self.groupBox.setMinimumSize(QtCore.QSize(80, 405))
        self.groupBox.setStyleSheet("")
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_8.setSpacing(0)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.mainMnuBtn = QtWidgets.QPushButton(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mainMnuBtn.sizePolicy().hasHeightForWidth())
        self.mainMnuBtn.setSizePolicy(sizePolicy)
        self.mainMnuBtn.setMinimumSize(QtCore.QSize(50, 50))
        self.mainMnuBtn.setMaximumSize(QtCore.QSize(50, 50))
        self.mainMnuBtn.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.mainMnuBtn.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(
            QtGui.QPixmap(cd+"/resource/Breeze KDE-Story-Dark/apps/24/homerun.svg"),
            QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.mainMnuBtn.setIcon(icon)
        self.mainMnuBtn.setIconSize(QtCore.QSize(50, 50))
        self.mainMnuBtn.setCheckable(True)
        self.mainMnuBtn.setAutoExclusive(True)
        self.mainMnuBtn.setFlat(False)
        self.mainMnuBtn.setObjectName("mainMnuBtn")
        self.buttonGroup = QtWidgets.QButtonGroup(MainWindow)
        self.buttonGroup.setObjectName("buttonGroup")
        self.buttonGroup.addButton(self.mainMnuBtn)
        self.verticalLayout_8.addWidget(self.mainMnuBtn, 0, QtCore.Qt.AlignHCenter)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.verticalLayout_8.addItem(spacerItem)
        self.cameraBtn = QtWidgets.QPushButton(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cameraBtn.sizePolicy().hasHeightForWidth())
        self.cameraBtn.setSizePolicy(sizePolicy)
        self.cameraBtn.setMinimumSize(QtCore.QSize(50, 50))
        self.cameraBtn.setMaximumSize(QtCore.QSize(50, 50))
        self.cameraBtn.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.cameraBtn.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(cd+"/resource/Breeze KDE-Story-Dark/devices/22/camera-photo.svg"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.cameraBtn.setIcon(icon1)
        self.cameraBtn.setIconSize(QtCore.QSize(50, 50))
        self.cameraBtn.setCheckable(True)
        self.cameraBtn.setAutoExclusive(True)
        self.cameraBtn.setFlat(False)
        self.cameraBtn.setObjectName("cameraBtn")
        self.buttonGroup.addButton(self.cameraBtn)
        self.verticalLayout_8.addWidget(self.cameraBtn, 0, QtCore.Qt.AlignHCenter)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.verticalLayout_8.addItem(spacerItem1)
        self.settingBtn = QtWidgets.QPushButton(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.settingBtn.sizePolicy().hasHeightForWidth())
        self.settingBtn.setSizePolicy(sizePolicy)
        self.settingBtn.setMinimumSize(QtCore.QSize(50, 50))
        self.settingBtn.setMaximumSize(QtCore.QSize(50, 50))
        self.settingBtn.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.settingBtn.setStyleSheet("")
        self.settingBtn.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(cd+"/resource/Breeze KDE-Story-Dark/actions/22/settings-configure.svg"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.settingBtn.setIcon(icon2)
        self.settingBtn.setIconSize(QtCore.QSize(50, 50))
        self.settingBtn.setCheckable(True)
        self.settingBtn.setAutoExclusive(True)
        self.settingBtn.setAutoDefault(False)
        self.settingBtn.setDefault(False)
        self.settingBtn.setFlat(False)
        self.settingBtn.setObjectName("settingBtn")
        self.buttonGroup.addButton(self.settingBtn)
        self.verticalLayout_8.addWidget(self.settingBtn, 0, QtCore.Qt.AlignHCenter)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.verticalLayout_8.addItem(spacerItem2)
        self.profileBtn = QtWidgets.QPushButton(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.profileBtn.sizePolicy().hasHeightForWidth())
        self.profileBtn.setSizePolicy(sizePolicy)
        self.profileBtn.setMinimumSize(QtCore.QSize(50, 50))
        self.profileBtn.setMaximumSize(QtCore.QSize(50, 50))
        self.profileBtn.setFocusPolicy(QtCore.Qt.NoFocus)
        self.profileBtn.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(cd+"/resource/Breeze KDE-Story-Dark/actions/16/amarok_artist.svg"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.profileBtn.setIcon(icon3)
        self.profileBtn.setIconSize(QtCore.QSize(50, 50))
        self.profileBtn.setCheckable(True)
        self.profileBtn.setAutoExclusive(True)
        self.profileBtn.setFlat(False)
        self.profileBtn.setObjectName("profileBtn")
        self.buttonGroup.addButton(self.profileBtn)
        self.verticalLayout_8.addWidget(self.profileBtn, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout_2.addWidget(self.groupBox)
        spacerItem3 = QtWidgets.QSpacerItem(20, 318, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.verticalLayout_2.addItem(spacerItem3)
        self.pushButton_3 = QtWidgets.QPushButton(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_3.sizePolicy().hasHeightForWidth())
        self.pushButton_3.setSizePolicy(sizePolicy)
        self.pushButton_3.setMinimumSize(QtCore.QSize(50, 50))
        self.pushButton_3.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(
            cd+"/resource/Breeze KDE-Story-Dark/actions/24/window-close.svg"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_3.setIcon(icon4)
        self.pushButton_3.setIconSize(QtCore.QSize(50, 50))
        self.pushButton_3.setCheckable(True)
        self.pushButton_3.setAutoExclusive(True)
        self.pushButton_3.setFlat(True)
        self.pushButton_3.setObjectName("pushButton_3")
        self.buttonGroup.addButton(self.pushButton_3)
        self.verticalLayout_2.addWidget(self.pushButton_3, 0, QtCore.Qt.AlignHCenter)
        self.horizontalLayout_6.addWidget(self.frame_2)
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stackedWidget.sizePolicy().hasHeightForWidth())
        self.stackedWidget.setSizePolicy(sizePolicy)
        self.stackedWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.stackedWidget.setObjectName("stackedWidget")
        self.home = QtWidgets.QWidget()
        self.home.setObjectName("home")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.home)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setSpacing(0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.frame_4 = QtWidgets.QFrame(self.home)
        self.frame_4.setMinimumSize(QtCore.QSize(671, 761))
        self.frame_4.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.frame_4.setSizeIncrement(QtCore.QSize(0, 0))
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frame_4)
        self.verticalLayout.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame = QtWidgets.QFrame(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setMinimumSize(QtCore.QSize(400, 370))
        self.frame.setStyleSheet("")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout.addWidget(self.frame)
        self.widget = QtWidgets.QWidget(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget.sizePolicy().hasHeightForWidth())
        self.widget.setSizePolicy(sizePolicy)
        self.widget.setMinimumSize(QtCore.QSize(0, 300))
        self.widget.setObjectName("widget")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_9.setSpacing(6)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.widget_2 = QtWidgets.QWidget(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget_2.sizePolicy().hasHeightForWidth())
        self.widget_2.setSizePolicy(sizePolicy)
        self.widget_2.setMinimumSize(QtCore.QSize(0, 70))
        self.widget_2.setObjectName("widget_2")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.widget_2)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.clearChat = QtWidgets.QPushButton(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.clearChat.sizePolicy().hasHeightForWidth())
        self.clearChat.setSizePolicy(sizePolicy)
        self.clearChat.setMinimumSize(QtCore.QSize(150, 40))
        self.clearChat.setCheckable(True)
        self.clearChat.setFlat(True)
        self.clearChat.setObjectName("clearChat")
        self.horizontalLayout_4.addWidget(self.clearChat)
        self.inputChat = QtWidgets.QPushButton(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.inputChat.sizePolicy().hasHeightForWidth())
        self.inputChat.setSizePolicy(sizePolicy)
        self.inputChat.setMinimumSize(QtCore.QSize(150, 40))
        self.inputChat.setCheckable(True)
        self.inputChat.setFlat(True)
        self.inputChat.setObjectName("inputChat")
        self.horizontalLayout_4.addWidget(self.inputChat)
        self.verticalLayout_9.addWidget(self.widget_2)
        self.frame_3 = QtWidgets.QFrame(self.widget)
        self.frame_3.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.frame_3.sizePolicy().hasHeightForWidth())
        self.frame_3.setSizePolicy(sizePolicy)
        self.frame_3.setMinimumSize(QtCore.QSize(200, 180))
        self.frame_3.setStyleSheet("")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout_3.setContentsMargins(2, 2, 2, 2)
        self.horizontalLayout_3.setSpacing(5)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.aiResponse = QtWidgets.QPlainTextEdit(self.frame_3)
        self.aiResponse.setUndoRedoEnabled(False)
        self.aiResponse.setReadOnly(True)
        self.aiResponse.setObjectName("aiResponse")
        self.horizontalLayout_3.addWidget(self.aiResponse)
        self.line = QtWidgets.QFrame(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.line.sizePolicy().hasHeightForWidth())
        self.line.setSizePolicy(sizePolicy)
        self.line.setMinimumSize(QtCore.QSize(0, 0))
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.horizontalLayout_3.addWidget(self.line)
        self.userInput = QtWidgets.QPlainTextEdit(self.frame_3)
        self.userInput.setObjectName("userInput")
        self.horizontalLayout_3.addWidget(self.userInput)
        self.verticalLayout_9.addWidget(self.frame_3)
        self.verticalLayout.addWidget(self.widget)
        self.verticalLayout_7.addWidget(self.frame_4)
        self.stackedWidget.addWidget(self.home)
        self.settingspage = QtWidgets.QWidget()
        self.settingspage.setObjectName("settingspage")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.settingspage)
        self.verticalLayout_6.setObjectName("verticalLayout_6")

        self.frame_5 = QtWidgets.QFrame(self.settingspage)
        self.frame_5.setMinimumSize(QtCore.QSize(200, 760))
        self.frame_5.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.frame_5.setStyleSheet("")
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_5)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_3.addItem(spacerItem4)
        self.openAiKeyFrame = QtWidgets.QFrame(self.frame_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.openAiKeyFrame.sizePolicy().hasHeightForWidth())
        self.openAiKeyFrame.setSizePolicy(sizePolicy)
        self.openAiKeyFrame.setMinimumSize(QtCore.QSize(0, 50))
        self.openAiKeyFrame.setMaximumSize(QtCore.QSize(16777215, 50))
        self.openAiKeyFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.openAiKeyFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.openAiKeyFrame.setObjectName("openAiKeyFrame")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.openAiKeyFrame)
        self.horizontalLayout.setSpacing(3)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.openAiKeyLabel = QtWidgets.QLabel(self.openAiKeyFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.openAiKeyLabel.sizePolicy().hasHeightForWidth())
        self.openAiKeyLabel.setSizePolicy(sizePolicy)
        self.openAiKeyLabel.setMinimumSize(QtCore.QSize(150, 30))
        self.openAiKeyLabel.setMaximumSize(QtCore.QSize(150, 30))
        self.openAiKeyLabel.setObjectName("openAiKeyLabel")
        self.horizontalLayout.addWidget(self.openAiKeyLabel)
        self.openAiKeyLineEdit = QtWidgets.QLineEdit(self.openAiKeyFrame)
        self.openAiKeyLineEdit.setMinimumSize(QtCore.QSize(0, 30))
        self.openAiKeyLineEdit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.openAiKeyLineEdit.setObjectName("openAiKeyLineEdit")
        self.horizontalLayout.addWidget(self.openAiKeyLineEdit, 0, QtCore.Qt.AlignVCenter)
        self.verticalLayout_3.addWidget(self.openAiKeyFrame)
        spacerItem5 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_3.addItem(spacerItem5)
        self.selectVoiceFrame = QtWidgets.QFrame(self.frame_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.selectVoiceFrame.sizePolicy().hasHeightForWidth())
        self.selectVoiceFrame.setSizePolicy(sizePolicy)
        self.selectVoiceFrame.setMinimumSize(QtCore.QSize(0, 50))
        self.selectVoiceFrame.setMaximumSize(QtCore.QSize(16777215, 50))
        self.selectVoiceFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.selectVoiceFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.selectVoiceFrame.setObjectName("selectVoiceFrame")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.selectVoiceFrame)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.selectVoiceLabel = QtWidgets.QLabel(self.selectVoiceFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.selectVoiceLabel.sizePolicy().hasHeightForWidth())
        self.selectVoiceLabel.setSizePolicy(sizePolicy)
        self.selectVoiceLabel.setMinimumSize(QtCore.QSize(150, 30))
        self.selectVoiceLabel.setMaximumSize(QtCore.QSize(150, 30))
        self.selectVoiceLabel.setObjectName("selectVoiceLabel")
        self.horizontalLayout_5.addWidget(self.selectVoiceLabel)
        self.selectVoiceComboBox = QtWidgets.QComboBox(self.selectVoiceFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.selectVoiceComboBox.sizePolicy().hasHeightForWidth())
        self.selectVoiceComboBox.setSizePolicy(sizePolicy)
        self.selectVoiceComboBox.setMaximumSize(QtCore.QSize(16777215, 30))
        self.selectVoiceComboBox.setObjectName("selectVoiceComboBox")
        for voices in available_voices:
            self.selectVoiceComboBox.addItem(voices)
        selectVoiceComboBoxIndex = self.selectVoiceComboBox.findText(current_voice)
        if not selectVoiceComboBoxIndex == -1:
            self.selectVoiceComboBox.setCurrentIndex(selectVoiceComboBoxIndex)
        self.horizontalLayout_5.addWidget(self.selectVoiceComboBox)
        self.verticalLayout_3.addWidget(self.selectVoiceFrame)
        spacerItem6 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_3.addItem(spacerItem6)
        
        self.themeSettingFrame = QtWidgets.QFrame(self.frame_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.themeSettingFrame.sizePolicy().hasHeightForWidth())
        self.themeSettingFrame.setSizePolicy(sizePolicy)
        self.themeSettingFrame.setMinimumSize(QtCore.QSize(0, 50))
        self.themeSettingFrame.setMaximumSize(QtCore.QSize(16777215, 50))
        self.themeSettingFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.themeSettingFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.themeSettingFrame.setObjectName("themeSettingFrame")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout(self.themeSettingFrame)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.label = QtWidgets.QLabel(self.themeSettingFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setMinimumSize(QtCore.QSize(150, 30))
        self.label.setMaximumSize(QtCore.QSize(150, 30))
        self.label.setObjectName("label")
        self.horizontalLayout_11.addWidget(self.label)
        self.lightModeCheckBox = QtWidgets.QCheckBox(self.themeSettingFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lightModeCheckBox.sizePolicy().hasHeightForWidth())
        self.lightModeCheckBox.setSizePolicy(sizePolicy)
        self.lightModeCheckBox.setMinimumSize(QtCore.QSize(130, 30))
        self.lightModeCheckBox.setMaximumSize(QtCore.QSize(130, 30))
        self.lightModeCheckBox.setObjectName("lightModeCheckBox")
        self.lightModeCheckBox.setAutoExclusive(True)
        self.horizontalLayout_11.addWidget(self.lightModeCheckBox)
        self.darkModeCheckBox_2 = QtWidgets.QCheckBox(self.themeSettingFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.darkModeCheckBox_2.sizePolicy().hasHeightForWidth())
        self.darkModeCheckBox_2.setSizePolicy(sizePolicy)
        self.darkModeCheckBox_2.setMinimumSize(QtCore.QSize(130, 30))
        self.darkModeCheckBox_2.setMaximumSize(QtCore.QSize(130, 30))
        self.darkModeCheckBox_2.setObjectName("darkModeCheckBox_2")
        self.darkModeCheckBox_2.setAutoExclusive(True)
        self.horizontalLayout_11.addWidget(self.darkModeCheckBox_2)
        self.verticalLayout_3.addWidget(self.themeSettingFrame)
        
        spacerItem7 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem7)

        self.footerSettingsPage = QtWidgets.QFrame(self.frame_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.footerSettingsPage.sizePolicy().hasHeightForWidth())
        self.footerSettingsPage.setSizePolicy(sizePolicy)
        self.footerSettingsPage.setMinimumSize(QtCore.QSize(0, 100))
        self.footerSettingsPage.setMaximumSize(QtCore.QSize(16777215, 100))
        self.footerSettingsPage.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.footerSettingsPage.setFrameShadow(QtWidgets.QFrame.Raised)
        self.footerSettingsPage.setObjectName("footerSettingsPage")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.footerSettingsPage)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem7)
        self.saveSettingsButton = QtWidgets.QPushButton(self.footerSettingsPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.saveSettingsButton.sizePolicy().hasHeightForWidth())
        self.saveSettingsButton.setSizePolicy(sizePolicy)
        self.saveSettingsButton.setMinimumSize(QtCore.QSize(70, 30))
        self.saveSettingsButton.setCheckable(True)
        self.saveSettingsButton.setFlat(True)
        self.saveSettingsButton.setObjectName("saveSettingsButton")
        self.horizontalLayout_9.addWidget(self.saveSettingsButton)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem8)
        self.cancelSettingsButton = QtWidgets.QPushButton(self.footerSettingsPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cancelSettingsButton.sizePolicy().hasHeightForWidth())
        self.cancelSettingsButton.setSizePolicy(sizePolicy)
        self.cancelSettingsButton.setMinimumSize(QtCore.QSize(70, 30))
        self.cancelSettingsButton.setCheckable(True)
        self.cancelSettingsButton.setFlat(True)
        self.cancelSettingsButton.setObjectName("cancelSettingsButton")
        self.horizontalLayout_9.addWidget(self.cancelSettingsButton)
        self.verticalLayout_3.addWidget(self.footerSettingsPage)
        self.verticalLayout_6.addWidget(self.frame_5)
        self.stackedWidget.addWidget(self.settingspage)
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.page)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.face_recog_widget = QtWidgets.QWidget(self.page)
        self.face_recog_widget.setObjectName("face_recog_widget")
        self.horizontalLayout_2.addWidget(self.face_recog_widget)
        self.stackedWidget.addWidget(self.page)
        self.profilepage = QtWidgets.QWidget()
        self.profilepage.setObjectName("profilepage")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.profilepage)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.frame_6 = QtWidgets.QFrame(self.profilepage)
        self.frame_6.setMinimumSize(QtCore.QSize(200, 760))
        self.frame_6.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.frame_6.setStyleSheet("")
        self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_6.setObjectName("frame_6")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_6)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.selectProfileFrame = QtWidgets.QFrame(self.frame_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.selectProfileFrame.sizePolicy().hasHeightForWidth())
        self.selectProfileFrame.setSizePolicy(sizePolicy)
        self.selectProfileFrame.setMinimumSize(QtCore.QSize(0, 200))
        self.selectProfileFrame.setMaximumSize(QtCore.QSize(16777215, 200))
        self.selectProfileFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.selectProfileFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.selectProfileFrame.setObjectName("selectProfileFrame")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.selectProfileFrame)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.selectProfileLabel = QtWidgets.QLabel(self.selectProfileFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.selectProfileLabel.sizePolicy().hasHeightForWidth())
        self.selectProfileLabel.setSizePolicy(sizePolicy)
        self.selectProfileLabel.setMinimumSize(QtCore.QSize(150, 30))
        self.selectProfileLabel.setMaximumSize(QtCore.QSize(150, 30))
        self.selectProfileLabel.setObjectName("selectProfileLabel")
        self.horizontalLayout_7.addWidget(self.selectProfileLabel)
        self.selectProfileComboBox = QtWidgets.QComboBox(self.selectProfileFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.selectProfileComboBox.sizePolicy().hasHeightForWidth())
        self.selectProfileComboBox.setSizePolicy(sizePolicy)
        self.selectProfileComboBox.setMinimumSize(QtCore.QSize(0, 30))
        self.selectProfileComboBox.setMaximumSize(QtCore.QSize(16777215, 30))
        self.selectProfileComboBox.setObjectName("selectProfileComboBox")
        for profiles in available_profiles:
            self.selectProfileComboBox.addItem(profiles)
        selectProfileComboBoxIndex = self.selectProfileComboBox.findText(current_profile)
        if not selectProfileComboBoxIndex == -1:
            self.selectProfileComboBox.setCurrentIndex(selectProfileComboBoxIndex)
        self.horizontalLayout_7.addWidget(self.selectProfileComboBox, 0, QtCore.Qt.AlignVCenter)
        self.verticalLayout_4.addWidget(self.selectProfileFrame)
        self.addProfileFrame1 = QtWidgets.QFrame(self.frame_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.addProfileFrame1.sizePolicy().hasHeightForWidth())
        self.addProfileFrame1.setSizePolicy(sizePolicy)
        self.addProfileFrame1.setMinimumSize(QtCore.QSize(0, 0))
        self.addProfileFrame1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.addProfileFrame1.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.addProfileFrame1.setFrameShadow(QtWidgets.QFrame.Raised)
        self.addProfileFrame1.setObjectName("addProfileFrame1")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.addProfileFrame1)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.addProfileFrame2 = QtWidgets.QFrame(self.addProfileFrame1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.addProfileFrame2.sizePolicy().hasHeightForWidth())
        self.addProfileFrame2.setSizePolicy(sizePolicy)
        self.addProfileFrame2.setMinimumSize(QtCore.QSize(0, 100))
        self.addProfileFrame2.setMaximumSize(QtCore.QSize(16777215, 100))
        self.addProfileFrame2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.addProfileFrame2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.addProfileFrame2.setObjectName("addProfileFrame2")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.addProfileFrame2)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.addProfileLabel = QtWidgets.QLabel(self.addProfileFrame2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.addProfileLabel.sizePolicy().hasHeightForWidth())
        self.addProfileLabel.setSizePolicy(sizePolicy)
        self.addProfileLabel.setMinimumSize(QtCore.QSize(150, 30))
        self.addProfileLabel.setObjectName("addProfileLabel")
        self.horizontalLayout_8.addWidget(self.addProfileLabel)
        self.addProfileLineEdit = QtWidgets.QLineEdit(self.addProfileFrame2)
        self.addProfileLineEdit.setObjectName("addProfileLineEdit")
        self.horizontalLayout_8.addWidget(self.addProfileLineEdit)
        self.addProfile = QtWidgets.QPushButton(self.addProfileFrame2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.addProfile.sizePolicy().hasHeightForWidth())
        self.addProfile.setSizePolicy(sizePolicy)
        self.addProfile.setMinimumSize(QtCore.QSize(40, 30))
        self.addProfile.setMaximumSize(QtCore.QSize(40, 30))
        self.addProfile.setObjectName("addProfile")
        self.addProfile.setCheckable(True)
        self.addProfile.setFlat(True)
        self.horizontalLayout_8.addWidget(self.addProfile)
        self.verticalLayout_10.addWidget(self.addProfileFrame2)
        spacerItem7 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_10.addItem(spacerItem7)
        self.profilePageSaveFrame = QtWidgets.QFrame(self.addProfileFrame1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.profilePageSaveFrame.sizePolicy().hasHeightForWidth())
        self.profilePageSaveFrame.setSizePolicy(sizePolicy)
        self.profilePageSaveFrame.setMinimumSize(QtCore.QSize(0, 100))
        self.profilePageSaveFrame.setMaximumSize(QtCore.QSize(16777215, 100))
        self.profilePageSaveFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.profilePageSaveFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.profilePageSaveFrame.setObjectName("profilePageSaveFrame")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.profilePageSaveFrame)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem10)
        self.saveProfileButton = QtWidgets.QPushButton(self.profilePageSaveFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.saveProfileButton.sizePolicy().hasHeightForWidth())
        self.saveProfileButton.setSizePolicy(sizePolicy)
        self.saveProfileButton.setMinimumSize(QtCore.QSize(70, 30))
        self.saveProfileButton.setMaximumSize(QtCore.QSize(70, 30))
        self.saveProfileButton.setCheckable(True)
        self.saveProfileButton.setFlat(True)
        self.saveProfileButton.setObjectName("saveProfileButton")
        self.horizontalLayout_10.addWidget(self.saveProfileButton)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem11)
        self.cancelProfileButton = QtWidgets.QPushButton(self.profilePageSaveFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cancelProfileButton.sizePolicy().hasHeightForWidth())
        self.cancelProfileButton.setSizePolicy(sizePolicy)
        self.cancelProfileButton.setMinimumSize(QtCore.QSize(70, 30))
        self.cancelProfileButton.setMaximumSize(QtCore.QSize(70, 30))
        self.cancelProfileButton.setCheckable(True)
        self.cancelProfileButton.setFlat(True)
        self.cancelProfileButton.setObjectName("cancelProfileButton")
        self.horizontalLayout_10.addWidget(self.cancelProfileButton)
        self.verticalLayout_10.addWidget(self.profilePageSaveFrame)

        self.verticalLayout_4.addWidget(self.addProfileFrame1)
        self.verticalLayout_5.addWidget(self.frame_6)
        self.stackedWidget.addWidget(self.profilepage)
        self.horizontalLayout_6.addWidget(self.stackedWidget)
        
        MainWindow.setCentralWidget(self.centralwidget)
        self.actionHelp = QtWidgets.QAction(MainWindow)
        self.actionHelp.setObjectName("actionHelp")

        self.availabelCameras = QtMultimedia.QCameraInfo.availableCameras()
        self.verticalLayoutFaceRecogWidget = QVBoxLayout(self.face_recog_widget)
        if not self.availabelCameras:
            noCameraLabel = QLabel()
            noCameraLabel.setParent(self.face_recog_widget)
            noCameraLabel.setText('no cameras found')
            noCameraLabel.setAlignment(QtCore.Qt.AlignCenter)

        if self.availabelCameras:
            # creating a QCameraViewFinder object
            self.viewfinder = QtMultimediaWidgets.QCameraViewfinder()
            # setting it to face_recog_widget
            self.viewfinder.setParent(self.face_recog_widget)
            # showing this viewfinder
            self.viewfinder.show()
            # Set the camera.
            self.camera = QtMultimedia.QCamera(self.availabelCameras[0])
            self.camera.setViewfinder(self.viewfinder)
            self.camera.setCaptureMode(QtMultimedia.QCamera.CaptureViewfinder)

        self.runButton = QtWidgets.QPushButton(self.frame)
        self.runButton.setObjectName("runButton")
        self.runButton.setFixedSize(200, 200)
        self.runButton.setStyleSheet(

            "#runButton{\n"
            "background: #2d2d2d;\n"
            "border-radius:100px;\n"
            "color: white;\n"
            "font-size:25px;\n"
            "}\n"
            "\n"

            "#runButton:hover {\n"
            "background: #393939;\n"
            "}\n"
            "\n"

        )
        layout = QtWidgets.QHBoxLayout()
        layout.addWidget(self.runButton)
        self.frame.setLayout(layout)

        self.shadow_effect = QGraphicsDropShadowEffect(self.runButton)
        self.shadow_effect.setBlurRadius(30)
        self.shadow_effect.setOffset(QtCore.QPoint(0, 0))

        self.runButton.setCheckable(True)

        self.runButton.clicked.connect(self.runButtonFun)

        # signal connecting
        self.mainMnuBtn.clicked.connect(self.openHomePage)
        self.settingBtn.clicked.connect(self.openSettingPage)
        self.profileBtn.clicked.connect(self.openProfilePage)
        self.cameraBtn.clicked.connect(self.openCameraPage)
        self.clearChat.clicked.connect(self.clearPlainTextEdit)
        self.inputChat.clicked.connect(self.inputChatFun)

        self.stackedWidget.setCurrentIndex(0)
        self.aiResponse.setPlaceholderText("AI Response:")
        self.userInput.setPlaceholderText("User Input:\n\nWrite Here")

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)

        # add few sec wait may be thread.wait() will work
        # self.pushButton_3.clicked['bool'].connect(MainWindow.close)

        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.timer = QTimer()

        self.thread = ActivateThread()
        self.pushButton_3.clicked['bool'].connect(self.stoping_thread)
        self.thread.worker.progress.connect(self.reportProgressGui)
        self.thread.worker.finished.connect(self.clearPlainTextEdit)

        self.selected_voice_str  = 0
       
        
   

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.clearChat.setText(_translate("MainWindow", "CLEAR CHAT"))
        self.inputChat.setText(_translate("MainWindow", "SEND CHAT"))
        self.openAiKeyLabel.setText(_translate("MainWindow", "OpenAi API Key"))
        self.selectVoiceLabel.setText(_translate("MainWindow", "Select Voice"))
        self.label.setText(_translate("MainWindow", "Set Theme"))
        self.lightModeCheckBox.setText(_translate("MainWindow", "Light Mode"))
        self.darkModeCheckBox_2.setText(_translate("MainWindow", "Dark Mode"))
        self.saveSettingsButton.setText(_translate("MainWindow", "SAVE"))
        self.cancelSettingsButton.setText(_translate("MainWindow", "CANCEL"))
        self.selectProfileLabel.setText(_translate("MainWindow", "Select Profile"))
        self.addProfileLabel.setText(_translate("MainWindow", "Add Profile"))
        self.addProfile.setText(_translate("MainWindow", "Add"))
        self.saveProfileButton.setText(_translate("MainWindow", "SAVE"))
        self.cancelProfileButton.setText(_translate("MainWindow", "CANCEL"))
        self.actionHelp.setText(_translate("MainWindow", "Help"))


       
    

    def stoping_thread(self):
        self.thread.stopWorker.emit()
        self.start_progress()
        self.timer.singleShot(100,MainWindow.close)

    def openHomePage(self):
        if self.mainMnuBtn.isChecked():
            self.stackedWidget.setCurrentIndex(0)
            if self.camera.state() == QtMultimedia.QCamera.ActiveState:
                self.camera.stop()

    def openSettingPage(self):
        if self.settingBtn.isChecked():
            self.stackedWidget.setCurrentIndex(1)
            if self.camera.state() == QtMultimedia.QCamera.ActiveState:
                self.camera.stop()

    def openCameraPage(self):
        if self.cameraBtn.isChecked():
            self.stackedWidget.setCurrentIndex(2)
            # start the camera
            self.camera.start()

    def openProfilePage(self):
        if self.profileBtn.isChecked():
            self.stackedWidget.setCurrentIndex(3)
            if self.camera.state() == QtMultimedia.QCamera.ActiveState:
                self.camera.stop()

    def inputChatFun(self):
        values = self.userInput.toPlainText()
        print(values)

    def setGreen(self):
        self.shadow_effect.setColor(QColor(15, 255, 90, 255))
        self.runButton.setGraphicsEffect(self.shadow_effect)

    def setBack(self):
        self.shadow_effect.setColor(QColor(15, 255, 90, 0))
        self.runButton.setGraphicsEffect(self.shadow_effect)

    def runButtonFun(self):
        self.aiResponse.clear()
        if self.runButton.isChecked():
            self.shadow_effect.setColor(QColor(55, 176, 255, 255))
            self.runButton.setGraphicsEffect(self.shadow_effect)
            self.timer.setSingleShot(True)
            self.timer.singleShot(1000, self.setGreen)
            # starting worker which runs the ai
            self.thread.start()

            print("starting ai")

        else:
            self.shadow_effect.setColor(QColor(255, 55, 132, 255))
            self.runButton.setGraphicsEffect(self.shadow_effect)
            self.timer.setSingleShot(True)
            self.timer.singleShot(1000, self.setBack)
            print("stopping ai")
            # tring to emit signal so the worker class would stop
            self.thread.stopWork.emit()



    # progress function
    def reportProgressGui(self, value):
        self.aiResponse.insertPlainText(str(value))
    #function to clean the ai response text area
    def clearPlainTextEdit(self):
        self.aiResponse.clear()
    #function for progress bar when closing the app
    def start_progress(self):
        self.progress_dialog = QProgressDialog(labelText="CLOSING WAIT FEW SEC", minimum=0, maximum=100, parent=self)
        self.progress_dialog.setWindowTitle("")
        self.progress_dialog.setWindowModality(2)
        self.progress_value = 100
        self.progress_dialog.show()
        for value in range(100):
            # self.timer.start(200)
            sleep(0.2)
            self.progress_dialog.setValue(100 - value)
        self.progress_dialog.hide()
        self.progress_dialog.setDisabled(True)

    # cleanup
    # def cleanup(self):
    #     if hasattr(self, 'thread')


#confirmation dailog box function
def confirmSave():
      #message box to ask if setting want to save
        reply = QMessageBox.question(ui,"SAVE",
        "To save the current settings restart is required.Do you want to restart now!"
        ,QMessageBox.Yes|QMessageBox.No,QMessageBox.No)
        if reply == QMessageBox.Yes:
            if ui.stackedWidget.currentIndex() == 1:
                local_api_key = ui.openAiKeyLineEdit.text()
                selected_voice_str = ui.selectVoiceComboBox.currentText()
                # checkApiKey()
                update_load_file(entered_api_key=local_api_key,selected_voice=selected_voice_str)
            elif ui.stackedWidget.currentIndex() == 3:
                selected_profile_gui = ui.selectProfileComboBox.currentText()
                update_load_file(selected_profile=selected_profile_gui)

            
#function that checks the api key if its legit or not
def checkApiKey():
    try:
        response = openai.Completion.create(
            model="text-davinci-002",
            prompt="hello world"
        )
    except openai.error.AuthenticationError as e:
        print(f"openAi API request was invalid{e}")


# profiles_entered = []
def getEnteredProfile():
    # profiles_entered.append(ui.addProfileLineEdit.text()) # trying to add profiles in run time 
    entered_profile = ui.addProfileLineEdit.text()
    update_load_file(added_profile=entered_profile)


#function that sets the field in settings json file
def update_load_file(selected_voice=None, selected_profile=None, added_profile=None, entered_api_key=None):
        with open(cd+'\\data\\loadOnStartup.json','r') as file:
            loadOnStartup = json.load(file)
            
        if entered_api_key is not None and api_key!=entered_api_key and entered_api_key !='' :
            loadOnStartup['settings'][0]['api_key'] = entered_api_key
        
        elif (not selected_voice is None) and (not current_voice == selected_voice):
            loadOnStartup['settings'][0]['current_voice'] = selected_voice
        
        elif (not selected_profile is None) and (not current_profile == selected_profile):
            loadOnStartup['profile'][0]['current_profile'] = selected_profile
        
        elif (not added_profile is None) and (not added_profile in available_profiles) and (not added_profile==''):
            profiles = list(available_profiles)           
            profiles.append(added_profile)
            loadOnStartup['profile'][0]['available_profiles'] = profiles

        with open(cd+"\\data\\loadOnStartup.json","w") as file:
            json.dump(loadOnStartup,file,indent=4)
        sleep(1)
        os.execl(sys.executable,sys.executable,*sys.argv)





if __name__ == "__main__":

    app = QtWidgets.QApplication(sys.argv)

    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)

    #connection to get the added profile using button
    ui.addProfile.clicked.connect(getEnteredProfile)

    #connection to get the get the api_key and selected voice  and save it 
    ui.saveSettingsButton.clicked.connect(confirmSave)
    ui.saveProfileButton.clicked.connect(confirmSave)
    

    app.setStyleSheet(stream)
    MainWindow.show()
    sys.exit(app.exec_())
